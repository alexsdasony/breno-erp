-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.account_categories (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL,
  description text,
  color character varying DEFAULT '#3B82F6'::character varying,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  segment_id uuid,
  CONSTRAINT account_categories_pkey PRIMARY KEY (id),
  CONSTRAINT account_categories_segment_id_fkey FOREIGN KEY (segment_id) REFERENCES public.segments(id)
);
CREATE TABLE public.accounts_payable (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  supplier_id uuid,
  numero_nota_fiscal character varying,
  descricao text NOT NULL,
  valor numeric NOT NULL,
  data_vencimento date NOT NULL,
  data_pagamento date,
  status character varying DEFAULT 'pendente'::character varying CHECK (status::text = ANY (ARRAY['pendente'::character varying, 'paga'::character varying, 'vencida'::character varying, 'cancelada'::character varying]::text[])),
  categoria_id uuid,
  forma_pagamento character varying DEFAULT 'boleto'::character varying CHECK (forma_pagamento::text = ANY (ARRAY['boleto'::character varying, 'pix'::character varying, 'transferencia'::character varying, 'dinheiro'::character varying, 'cartao'::character varying, 'cheque'::character varying]::text[])),
  observacoes text,
  responsavel_pagamento character varying,
  numero_parcela integer DEFAULT 1,
  total_parcelas integer DEFAULT 1,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  segment_id uuid,
  CONSTRAINT accounts_payable_pkey PRIMARY KEY (id),
  CONSTRAINT accounts_payable_supplier_id_fkey FOREIGN KEY (supplier_id) REFERENCES public.suppliers(id),
  CONSTRAINT accounts_payable_categoria_id_fkey FOREIGN KEY (categoria_id) REFERENCES public.account_categories(id),
  CONSTRAINT accounts_payable_segment_id_fkey FOREIGN KEY (segment_id) REFERENCES public.segments(id)
);
CREATE TABLE public.accounts_payable_backup (
  id uuid,
  supplier character varying,
  description text,
  amount numeric,
  due_date date,
  status character varying,
  created_at timestamp without time zone,
  updated_at timestamp without time zone,
  segment_id uuid
);
CREATE TABLE public.billings (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  customer_id uuid,
  customer_name character varying,
  amount numeric NOT NULL,
  due_date date NOT NULL,
  status character varying DEFAULT 'Pendente'::character varying,
  payment_date date,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  segment_id uuid,
  CONSTRAINT billings_pkey PRIMARY KEY (id)
);
CREATE TABLE public.cost_centers (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  segment_id uuid,
  CONSTRAINT cost_centers_pkey PRIMARY KEY (id)
);
CREATE TABLE public.customers (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL,
  tipo_pessoa character varying NOT NULL DEFAULT 'pf'::character varying CHECK (tipo_pessoa::text = ANY (ARRAY['pf'::character varying, 'pj'::character varying]::text[])),
  cpf character varying UNIQUE,
  cnpj character varying UNIQUE,
  rg character varying,
  data_nascimento date,
  estado_civil character varying,
  profissao character varying,
  empresa character varying,
  cargo character varying,
  data_admissao date,
  tipo_documento character varying,
  numero_documento character varying,
  data_emissao date,
  data_validade date,
  orgao_emissor character varying,
  documento_image_url text,
  documentos jsonb DEFAULT '[]'::jsonb,
  cnpj_origem_renda character varying,
  data_admissao_renda date,
  cargo_renda character varying,
  tipo_renda character varying,
  renda_bruta numeric,
  salario_liquido numeric,
  valor_imposto_renda numeric,
  data_comprovacao date,
  documento_renda_image_url text,
  renda_mensal numeric,
  renda_complementar numeric,
  origem_renda character varying,
  comprovantes_renda jsonb DEFAULT '[]'::jsonb,
  cep character varying,
  logradouro character varying,
  numero character varying,
  complemento character varying,
  bairro character varying,
  cidade character varying,
  estado character varying,
  tipo_imovel character varying,
  data_referencia date,
  telefone character varying,
  tipo_telefone character varying DEFAULT 'residencial'::character varying,
  celular character varying,
  email character varying UNIQUE,
  telefone_comercial character varying,
  data_referencia_contato date,
  possui_patrimonio boolean DEFAULT false,
  valor_patrimonio numeric,
  descricao_patrimonio text,
  status character varying DEFAULT 'pendente'::character varying CHECK (status::text = ANY (ARRAY['pendente'::character varying, 'em_analise'::character varying, 'aprovado'::character varying, 'reprovado'::character varying, 'suspenso'::character varying]::text[])),
  observacoes text,
  responsavel_cadastro character varying,
  data_cadastro date DEFAULT CURRENT_DATE,
  total_purchases numeric DEFAULT 0,
  last_purchase_date date,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  segment_id uuid,
  CONSTRAINT customers_pkey PRIMARY KEY (id),
  CONSTRAINT customers_segment_id_fkey FOREIGN KEY (segment_id) REFERENCES public.segments(id)
);
CREATE TABLE public.customers_backup (
  id uuid,
  name character varying,
  cpf character varying,
  email character varying,
  phone character varying,
  address text,
  city character varying,
  state character varying,
  total_purchases numeric,
  last_purchase_date date,
  created_at timestamp without time zone,
  updated_at timestamp without time zone,
  segment_id uuid
);
CREATE TABLE public.financial_document_payments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  document_id uuid NOT NULL,
  installment_id uuid,
  payment_id uuid NOT NULL,
  amount_applied numeric NOT NULL,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT financial_document_payments_pkey PRIMARY KEY (id),
  CONSTRAINT financial_document_payments_document_fkey FOREIGN KEY (document_id) REFERENCES public.financial_documents(id),
  CONSTRAINT financial_document_payments_installment_fkey FOREIGN KEY (installment_id) REFERENCES public.financial_installments(id),
  CONSTRAINT financial_document_payments_payment_fkey FOREIGN KEY (payment_id) REFERENCES public.financial_payments(id)
);
CREATE TABLE public.financial_documents (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  partner_id uuid,
  direction character varying NOT NULL CHECK (direction::text = ANY (ARRAY['receivable'::character varying, 'payable'::character varying]::text[])),
  doc_no character varying,
  issue_date date,
  due_date date,
  amount numeric NOT NULL,
  balance numeric NOT NULL DEFAULT 0,
  status character varying NOT NULL DEFAULT 'open'::character varying CHECK (status::text = ANY (ARRAY['draft'::character varying, 'open'::character varying, 'partially_paid'::character varying, 'paid'::character varying, 'canceled'::character varying]::text[])),
  category_id uuid,
  segment_id uuid,
  description text,
  payment_method character varying,
  notes text,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT financial_documents_pkey PRIMARY KEY (id),
  CONSTRAINT financial_documents_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES public.partners(id),
  CONSTRAINT financial_documents_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.account_categories(id),
  CONSTRAINT financial_documents_segment_id_fkey FOREIGN KEY (segment_id) REFERENCES public.segments(id)
);
CREATE TABLE public.financial_installments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  document_id uuid NOT NULL,
  installment_number integer NOT NULL DEFAULT 1,
  due_date date NOT NULL,
  amount numeric NOT NULL,
  paid_amount numeric NOT NULL DEFAULT 0,
  status character varying NOT NULL DEFAULT 'open'::character varying CHECK (status::text = ANY (ARRAY['open'::character varying, 'paid'::character varying, 'canceled'::character varying]::text[])),
  paid_date date,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT financial_installments_pkey PRIMARY KEY (id),
  CONSTRAINT financial_installments_document_id_fkey FOREIGN KEY (document_id) REFERENCES public.financial_documents(id)
);
CREATE TABLE public.financial_payments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  payment_date date NOT NULL DEFAULT CURRENT_DATE,
  amount numeric NOT NULL,
  method character varying,
  reference character varying,
  notes text,
  segment_id uuid,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT financial_payments_pkey PRIMARY KEY (id),
  CONSTRAINT financial_payments_segment_id_fkey FOREIGN KEY (segment_id) REFERENCES public.segments(id)
);
CREATE TABLE public.integrations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  service_name character varying NOT NULL,
  api_key text,
  enabled boolean DEFAULT false,
  config jsonb,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  segment_id uuid,
  CONSTRAINT integrations_pkey PRIMARY KEY (id)
);
CREATE TABLE public.nfe (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  number text NOT NULL,
  customer_name text NOT NULL,
  date date NOT NULL,
  total numeric NOT NULL,
  status text DEFAULT 'Emitida'::text CHECK (status = ANY (ARRAY['Emitida'::text, 'Cancelada'::text])),
  segment_id integer,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT nfe_pkey PRIMARY KEY (id)
);
CREATE TABLE public.nfe_list (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  number character varying NOT NULL UNIQUE,
  customer_name character varying,
  date date NOT NULL,
  total numeric NOT NULL,
  status character varying DEFAULT 'Emitida'::character varying,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT nfe_list_pkey PRIMARY KEY (id)
);
CREATE TABLE public.partner_roles (
  partner_id uuid NOT NULL,
  role character varying NOT NULL CHECK (role::text = ANY (ARRAY['customer'::character varying, 'supplier'::character varying, 'employee'::character varying]::text[])),
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT partner_roles_pkey PRIMARY KEY (partner_id, role),
  CONSTRAINT partner_roles_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES public.partners(id)
);
CREATE TABLE public.partners (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL,
  tax_id character varying UNIQUE,
  email character varying,
  phone character varying,
  address text,
  city character varying,
  state character varying,
  zip_code character varying,
  notes text,
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying, 'inactive'::character varying, 'suspended'::character varying]::text[])),
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  segment_id uuid,
  CONSTRAINT partners_pkey PRIMARY KEY (id)
);
CREATE TABLE public.products (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL,
  stock integer DEFAULT 0,
  min_stock integer DEFAULT 0,
  price numeric NOT NULL,
  category character varying,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  segment_id uuid,
  code character varying,
  description text,
  cost_price numeric DEFAULT 0,
  stock_quantity integer DEFAULT 0,
  minimum_stock integer DEFAULT 0,
  supplier character varying,
  CONSTRAINT products_pkey PRIMARY KEY (id)
);
CREATE TABLE public.sales (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  customer_id uuid,
  customer_name character varying,
  product character varying,
  quantity integer NOT NULL,
  total numeric NOT NULL,
  date date NOT NULL,
  status character varying DEFAULT 'Pendente'::character varying,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  segment_id uuid,
  sale_date date,
  total_amount numeric,
  payment_method character varying DEFAULT 'cash'::character varying,
  notes text,
  CONSTRAINT sales_pkey PRIMARY KEY (id)
);
CREATE TABLE public.segments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL,
  description text,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT segments_pkey PRIMARY KEY (id)
);
CREATE TABLE public.suppliers (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL,
  cnpj character varying UNIQUE,
  cpf character varying UNIQUE,
  email character varying,
  telefone character varying,
  endereco text,
  cidade character varying,
  estado character varying,
  cep character varying,
  observacoes text,
  status character varying DEFAULT 'ativo'::character varying CHECK (status::text = ANY (ARRAY['ativo'::character varying, 'inativo'::character varying, 'suspenso'::character varying]::text[])),
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  segment_id uuid,
  CONSTRAINT suppliers_pkey PRIMARY KEY (id),
  CONSTRAINT suppliers_segment_id_fkey FOREIGN KEY (segment_id) REFERENCES public.segments(id)
);
CREATE TABLE public.transactions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  type character varying NOT NULL,
  description text,
  amount numeric NOT NULL,
  date date NOT NULL,
  category character varying,
  cost_center character varying,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  segment_id uuid,
  CONSTRAINT transactions_pkey PRIMARY KEY (id)
);
CREATE TABLE public.users (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL,
  email character varying NOT NULL UNIQUE,
  password character varying NOT NULL,
  role character varying DEFAULT 'user'::character varying,
  status text DEFAULT 'ativo'::text,
  segment_id integer,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT users_pkey PRIMARY KEY (id)
);